#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.269
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bbox
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class BlackBox : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertBox1(Box1 instance);
    partial void UpdateBox1(Box1 instance);
    partial void DeleteBox1(Box1 instance);
    #endregion
		
		public BlackBox(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlackBox(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlackBox(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BlackBox(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Box1> Box1s
		{
			get
			{
				return this.GetTable<Box1>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Box1")]
	public partial class Box1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PTxt;
		
		private System.Nullable<int> _PInt;
		
		private System.Guid _PKey;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPTxtChanging(string value);
    partial void OnPTxtChanged();
    partial void OnPIntChanging(System.Nullable<int> value);
    partial void OnPIntChanged();
    partial void OnPKeyChanging(System.Guid value);
    partial void OnPKeyChanged();
    #endregion
		
		public Box1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pTxt", Storage="_PTxt", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PTxt
		{
			get
			{
				return this._PTxt;
			}
			set
			{
				if ((this._PTxt != value))
				{
					this.OnPTxtChanging(value);
					this.SendPropertyChanging();
					this._PTxt = value;
					this.SendPropertyChanged("PTxt");
					this.OnPTxtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pInt", Storage="_PInt", DbType="Int")]
		public System.Nullable<int> PInt
		{
			get
			{
				return this._PInt;
			}
			set
			{
				if ((this._PInt != value))
				{
					this.OnPIntChanging(value);
					this.SendPropertyChanging();
					this._PInt = value;
					this.SendPropertyChanged("PInt");
					this.OnPIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PKey
		{
			get
			{
				return this._PKey;
			}
			set
			{
				if ((this._PKey != value))
				{
					this.OnPKeyChanging(value);
					this.SendPropertyChanging();
					this._PKey = value;
					this.SendPropertyChanged("PKey");
					this.OnPKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
